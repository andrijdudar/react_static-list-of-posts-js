{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"i28IAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,qBAAIC,UAAU,cAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QClBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIH,UAAU,cAAd,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQS,WCNRC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBT,EAAgBS,EAAhBT,MAAOD,EAASU,EAATV,KAEf,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCHMW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOH,EAAyBE,EAAzBF,KAAMR,EAAmBU,EAAnBV,KAAMI,EAAaM,EAAbN,SAE3B,OACE,qBAAIH,UAAU,WAAd,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAEFH,GACC,8BACG,eACD,cAAC,EAAD,CAAUA,KAAMA,UAKtB,mBAAGP,UAAU,iBAAb,SACGD,IAGmB,IAApBI,EAASQ,OACP,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,qCC5BCS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIb,UAAU,WAAd,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,W,qBCQX,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBQ,EAYDN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAAW,MAY3DZ,UAT2BE,EASGI,EAAKJ,GAR5Ba,EAAmBC,QACxB,SAAAvB,GAAO,OAAIA,EAAQwB,SAAWf,QAFlC,IAA6BA,EAJRU,KAgBRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d49c7cc.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <li className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </li>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <ul className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </ul>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { title, user, body, comments } = post;\n\n  return (\n    <li className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n        {user && (\n          <p>\n            {' Posted by  '}\n            <UserInfo user={user} />\n          </p>\n        )}\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n      {\n        comments.length !== 0 ? (\n          <CommentList comments={comments} />\n        ) : (\n          <>\n            <hr />\n\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n      }\n    </li>\n  );\n};\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <ul className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </ul>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentsByPostId(id) {\n  return commentsFromServer.filter(\n    comment => comment.postId === id,\n  );\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}